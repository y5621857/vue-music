{"version":3,"sources":["mixin.js"],"names":[],"mappings":";AAAA,SAAQ,UAAR,EAAoB,YAApB,EAAkC,UAAlC,QAAmD,MAAnD;AACA,SAAQ,QAAR,QAAuB,kBAAvB;AACA,SAAQ,OAAR,QAAsB,gBAAtB;;AAEA,OAAO,IAAM,gBAAgB;AAC3B,yBACK,WAAW,CACZ,UADY,CAAX,CADL,CAD2B;AAM3B,SAN2B,qBAMhB;AACT,SAAK,cAAL,CAAoB,KAAK,QAAzB;AACD,GAR0B;AAS3B,WAT2B,uBASd;AACX,SAAK,cAAL,CAAoB,KAAK,QAAzB;AACD,GAX0B;;AAY3B,SAAO;AACL,YADK,oBACK,MADL,EACa;AAChB,WAAK,cAAL,CAAoB,MAApB;AACD;AAHI,GAZoB;AAiB3B,WAAS;AACP,kBADO,4BACW;AAChB,YAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACD;AAHM;AAjBkB,CAAtB;;AAwBP,OAAO,IAAM,cAAc;AACzB;AACE,YADF,sBACc;AACV,cAAQ,KAAK,IAAb;AACE,aAAK,SAAS,QAAd;AACE,iBAAO,eAAP;AACF,aAAK,SAAS,IAAd;AACE,iBAAO,WAAP;AACF,aAAK,SAAS,MAAd;AACE,iBAAO,aAAP;AANJ;AAQD;AAVH,KAWK,WAAW,CACZ,cADY,EAEZ,UAFY,EAGZ,aAHY,EAIZ,MAJY,EAKZ,SALY,CAAX,CAXL,CADyB;AAoBzB;AACE,cADF,wBACgB;AACZ,UAAM,OAAO,CAAC,KAAK,IAAL,GAAY,CAAb,IAAkB,CAA/B;AACA,WAAK,WAAL,CAAiB,IAAjB;AACA,UAAI,OAAO,IAAX;AACA,UAAI,SAAS,SAAS,MAAtB,EAA8B;AAC5B,eAAO,QAAQ,KAAK,YAAb,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAK,YAAZ;AACD;AACD,WAAK,iBAAL,CAAuB,IAAvB;AACA,WAAK,WAAL,CAAiB,IAAjB;AACA,WAAK,gBAAL,CAAsB,KAAK,WAA3B;AACD,KAbH;AAcE,qBAdF,6BAcqB,IAdrB,EAc2B;AAAA;;AACvB,UAAI,QAAQ,KAAK,SAAL,CAAe,UAAC,IAAD,EAAU;AACnC,eAAO,KAAK,EAAL,KAAY,MAAK,WAAL,CAAiB,EAApC;AACD,OAFW,CAAZ;AAGA,WAAK,eAAL,CAAqB,KAArB;AACD;AAnBH,KAoBK,aAAa;AACd,qBAAiB,mBADH;AAEd,qBAAiB,mBAFH;AAGd,iBAAa,eAHC;AAId,iBAAa;AAJC,GAAb,CApBL;AApByB,CAApB;;AAiDP,OAAO,IAAM,cAAc;AACzB,MADyB,kBACjB;AACN,WAAO;AACL,aAAO;AADF,KAAP;AAGD,GALwB;;AAMzB,yBACK,WAAW,CACZ,eADY,CAAX,CADL,CANyB;AAWzB;AACE,YADF,oBACY,KADZ,EACmB;AACf,WAAK,KAAL,CAAW,SAAX,CAAqB,QAArB,CAA8B,KAA9B;AACD,KAHH;AAIE,aAJF,uBAIe;AACX,WAAK,KAAL,CAAW,SAAX,CAAqB,IAArB;AACD,KANH;AAOE,cAPF,wBAOgB;AACZ,WAAK,iBAAL,CAAuB,KAAK,KAA5B;AACD,KATH;AAUE,iBAVF,yBAUiB,KAVjB,EAUwB;AACpB,WAAK,KAAL,GAAa,KAAb;AACD;AAZH,KAaK,WAAW,CACZ,mBADY,EAEZ,qBAFY,CAAX,CAbL;AAXyB,CAApB","file":"mixin-compiled.js","sourcesContent":["import {mapGetters, mapMutations, mapActions} from 'vuex'\nimport {playMode} from 'common/js/config'\nimport {shuffle} from 'common/js/util'\n\nexport const playListMixin = {\n  computed: {\n    ...mapGetters([\n      'playlist'\n    ])\n  },\n  mounted () {\n    this.handlePlayList(this.playlist)\n  },\n  activated () {\n    this.handlePlayList(this.playlist)\n  },\n  watch: {\n    playlist (newVal) {\n      this.handlePlayList(newVal)\n    }\n  },\n  methods: {\n    handlePlayList () {\n      throw new Error('component must implement handlePlayList method')\n    }\n  }\n}\n\nexport const playerMixin = {\n  computed: {\n    iconMode () {\n      switch (this.mode) {\n        case playMode.sequence:\n          return 'icon-sequence'\n        case playMode.loop:\n          return 'icon-loop'\n        case playMode.random:\n          return 'icon-random'\n      }\n    },\n    ...mapGetters([\n      'sequencelist',\n      'playlist',\n      'currentSong',\n      'mode',\n      'playing'\n    ])\n  },\n  methods: {\n    changeMode () {\n      const mode = (this.mode + 1) % 3\n      this.setPlayMode(mode)\n      let list = null\n      if (mode === playMode.random) {\n        list = shuffle(this.sequencelist)\n      } else {\n        list = this.sequencelist\n      }\n      this.resetCurrentIndex(list)\n      this.setPlayList(list)\n      this._scrollToCurrent(this.currentSong)\n    },\n    resetCurrentIndex (list) {\n      let index = list.findIndex((item) => {\n        return item.id === this.currentSong.id\n      })\n      this.setCurrentIndex(index)\n    },\n    ...mapMutations({\n      setPlayingState: 'SET_PLAYING_STATE',\n      setCurrentIndex: 'SET_CURRENT_INDEX',\n      setPlayMode: 'SET_PLAY_MODE',\n      setPlayList: 'SET_PLAYLIST'\n    })\n  }\n}\n\nexport const searchMixin = {\n  data () {\n    return {\n      query: ''\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'searchHistory'\n    ])\n  },\n  methods: {\n    addQuery (query) {\n      this.$refs.searchBox.setQuery(query)\n    },\n    blurInput () {\n      this.$refs.searchBox.blur()\n    },\n    saveSearch () {\n      this.saveSearchHistory(this.query)\n    },\n    onQueryChange (query) {\n      this.query = query\n    },\n    ...mapActions([\n      'saveSearchHistory',\n      'deleteSearchHistory'\n    ])\n  }\n}\n"]}